generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ChronicleStatus {
  draft
  published
  read
}

model Broadcast {
  id         String      @id @default(uuid())
  title      String
  prefix     String      @unique @db.VarChar(30)
  editor     String      @unique @db.VarChar(255)
  //reader is use for the slider and the reader
  reader     String      @unique @db.VarChar(255)
  started_at DateTime?   @db.Timestamp(6)
  ended_at   DateTime?   @db.Timestamp(6)
  createdAt  DateTime    @default(now()) @db.Timestamp(6)
  updatedAt  DateTime    @updatedAt
  chronicles Chronicle[]
  editors    Editor[]
}

model Editor {
  id           String      @id @default(uuid())
  name         String
  broadcast    Broadcast   @relation(fields: [broadcast_id], references: [id])
  broadcast_id String
  createdAt    DateTime    @default(now()) @db.Timestamp(6)
  chronicles   Chronicle[]
}

model Chronicle {
  id           String          @id @default(uuid())
  broadcast_id String?
  broadcast    Broadcast?      @relation(fields: [broadcast_id], references: [id])
  title        String
  position     Int
  text         String?         @db.LongText
  status       ChronicleStatus @default(draft)
  createdAt    DateTime        @default(now()) @db.Timestamp(6)
  updatedAt    DateTime        @updatedAt
  medias       Media[]
  editor       Editor?         @relation(fields: [editorId], references: [id])
  editorId     String?
}

model Media {
  id           String    @id @default(uuid())
  source       String
  name         String
  type         String
  url          String
  cover        String?
  size         Int       @default(0)
  createdAt    DateTime  @default(now()) @db.Timestamp(6)
  chronicle_id String
  chronicle    Chronicle @relation(fields: [chronicle_id], references: [id])
}

model Layout {
  id        String   @id @default(uuid())
  name      String
  layout    Json
  createdAt DateTime @default(now()) @db.Timestamp(6)
  current   Boolean  @default(false)
  user_id   String
}
